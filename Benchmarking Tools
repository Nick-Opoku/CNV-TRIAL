#USING CANOES
#STEP ONE
#bedtools multicov -bams `cat /path-to-bam-files/bam_list` -bed /path-to-target-bed-file/targets.bed -q 20 >
/path-to-output-directory/canoes.reads.txt

#STEP TWO
#java -jar /path-to-GATK-files/tools/GATK/3.5-0-g36282e4/GenomeAnalysisTK.jar -T GCContentByInterval -L 
/path-to-target-bed/targets.bed -R /path-to-reference-genome/human_genome/hs37d5.fa -o 
/path-to-output-directory/canoes/gc.txt

#MAIN STEP
setwd('/home/nick/Downloads/CNVTOOLS/')
gc <- read.table("/home/nick/Downloads/CNVTOOLS/gc.txt")$V2
canoes.reads <- read.table("/home/nick/Downloads/CNVTOOLS/canoes.reads.txt")

sample.names <- c('HG71.bam','NA78.bam','NA59.bam','NA06.bam')
names(canoes.reads) <- c("chromosome", "start", "end", sample.names)

target <- seq(1, nrow(canoes.reads))
canoes.reads <- cbind(target, gc, canoes.reads)

source("/home/nick/Downloads/CNVTOOLS/CANOES-master/CANOES.R")

xcnv.list <- vector('list', length(sample.names)) 

for (i in 1:length(sample.names)){
  xcnv.list[[i]] <- CallCNVs(sample.names[i], canoes.reads)
}
xcnvs <- do.call('rbind', xcnv.list)

write.table(xcnvs,paste0("/home/nick/Downloads/CNVTOOLS/canoes.csv"),col.names = T,row.names = T,quote = F)


#FOR CNMOPS
# Start the clock!
ptm <- proc.time()

library(cn.mops)

sampleNames <- c("NA12878","NA19159","NA19206", "HG02571", "HG03084", "HGDP01414")
 
BAMFiles<- c("/media/nick/BioData/Nicholas/Data/NA12878.bam",
              "/media/nick/BioData/Nicholas/Data/NA19159.bam",
              "/media/nick/BioData/Nicholas/Data/NA19206.bam",
              "/media/nick/BioData/Nicholas/Data/HG02571.bam",
              "/media/nick/BioData/Nicholas/Data/HG03084.bam",
              "/media/nick/BioData/Nicholas/Data/HGDP01414.bam")

target.file <- "/home/nick/Documents/TRIAL/CODES-FOR-GRAPHS/TRYS/my-pipeline/NewTargetafterzeroremoval.bed"



segments <- read.table("/home/nick/Documents/TRIAL/CODES-FOR-GRAPHS/TRYS/my-pipeline/NewTargetafterzeroremoval.bed" ,
                       sep="\t",as.is=TRUE)

gr<-GRanges(segments[,1],IRanges(segments[,2],segments[,3]))

X<-getSegmentReadCountsFromBAM(BAMFiles, GR=gr)

resCNMOPS<-exomecn.mops(X) #, normType="poisson")

resCNMOPS<-calcIntegerCopyNumbers(resCNMOPS)

CNVs<-as.data.frame(cnvs(resCNMOPS))

write.csv(CNVs,file="/home/nick/Downloads/CNVTOOLS/RESULTS/cnmops.csv")
#plot(resCNMOPS,which=8)

# Stop the clock
proc.time() - ptm


#FOR CODEX

library(CODEX)
dirPath <- "/media/nick/BioData/Nicholas/Data/"
bamFile <- list.files(dirPath, pattern ='*.bam$')
bamdir <- file.path(dirPath, bamFile)
sampname <- as.matrix(substr(bamFile,1,4))
bedFile <- "/home/nick/Documents/TRIAL/CODES-FOR-GRAPHS/TRYS/my-pipeline/NewTargetafterzeroremoval.bed"

finalcall<-matrix(nrow=0,ncol=13,dimnames =list(c(),
                                                c("sample_name", "chr", "cnv","st_bp", "ed_bp",
                                                  "length_kb", "st_exon", "ed_exon"," raw_cov",
                                                  "norm_cov","copy_no","lratio","mBIC")))
for(chr in 1:22){

  bambedObj <- getbambed(bamdir = bamdir, bedFile = bedFile, 
                       sampname = sampname, projectname = "CODEX",chr)
  bamdir <- bambedObj$bamdir; sampname <- bambedObj$sampname
  ref <- bambedObj$ref; projectname <- bambedObj$projectname; chr <- bambedObj$chr

  coverageObj <- getcoverage(bambedObj, mapqthres = 20)
  Y <- coverageObj$Y; readlength <- coverageObj$readlength

  gc <- getgc(chr, ref)
  mapp <- getmapp(chr, ref)
  qcObj <- qc(Y, sampname, chr, ref, mapp, gc, cov_thresh = c(20, 4000),
            length_thresh = c(20, 2000), mapp_thresh = 0.9, gc_thresh = c(20, 80))
  Y_qc <- qcObj$Y_qc; sampname_qc <- qcObj$sampname_qc; gc_qc <- qcObj$gc_qc
  mapp_qc <- qcObj$mapp_qc; ref_qc <- qcObj$ref_qc; qcmat <- qcObj$qcmat
  normObj <- normalize(Y_qc, gc_qc, K = 1:3)
  Yhat <- normObj$Yhat; AIC <- normObj$AIC; BIC <- normObj$BIC
  RSS <- normObj$RSS; K <- normObj$K
  optK = K[which.max(BIC)]
  finalcall <-rbind(finalcall, segment(Y_qc, Yhat, optK = optK, K = K, sampname_qc,
                     ref_qc, chr, lmax = 200, mode = "integer"))
}


write.table(finalcall, file = paste('/home/nick/Downloads/CNVTOOLS/RESULTS/Exome-results'), sep='\t')


#FOR EXOME DEPTH

library(Biostrings)
library(IRanges)
library(ExomeDepth)

bed <- read.table("/home/nick/Documents/TRIAL/CODES-FOR-GRAPHS/TRYS/my-pipeline/NewTargetafterzeroremoval.bed",
                  sep="\t",header = FALSE) #path of BED-File exons 

samples.bam <- c("/media/nick/BioData/Nicholas/Data/NA12878.bam",
              "/media/nick/BioData/Nicholas/Data/NA19159.bam",
              "/media/nick/BioData/Nicholas/Data/NA19206.bam",
              "/media/nick/BioData/Nicholas/Data/HG02571.bam",
              "/media/nick/BioData/Nicholas/Data/HG03084.bam",
              "/media/nick/BioData/Nicholas/Data/HGDP01414.bam")

fasta <- "/home/nick/Documents/TRIAL/CODES-FOR-GRAPHS/TRYS/my-pipeline/HG37/human_g1k_v37.fasta"

read.count <- getBamCounts(bed.frame = bed,
                           bam.files = samples.bam,
                           include.chr = FALSE,
                           referenceFasta = fasta)

save(read.count, file="/home/nick/Downloads/CNVTOOLS/RESULTS/ExomeDepthcounts.RData")

#Main-Code

read.count <- get(load(paste0("/home/nick/Downloads/CNVTOOLS/RESULTS/ExomeDepthcounts.RData")))
norma <-as.data.frame(read.count)

my.test <-norma$NA12878.bam

x <- c("HG02571.bam","NA19159.bam","NA19206.bam")
my.matrix <- as.matrix( norma[, x])
my.reference.selected <- apply(X = my.matrix, MAR=1,FUN=sum)

all.exons <- new('ExomeDepth', test = my.test, 
                 reference = my.reference.selected,
                 formula ='cbind(test, reference) ~ 1')


Qall.exons <-CallCNVs(x = all.exons, transition.probability = 10^-4,
                      chromosome = norma$chromosome,
                      start = norma$start,
                      end = norma$end,
                      name = norma$NA12878.bam)

data<-as.data.frame(Qall.exons@CNV.calls)
write.table(data,paste0("/home/nick/Downloads/CNVTOOLS/RESULTS/ExomeDepthcnv"),col.names = T,row.names = F,quote = F)


